[{"/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/index.js":"1","/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/reportWebVitals.js":"2","/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/App.js":"3","/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/components/viewer/index.jsx":"4","/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/components/panel/index.jsx":"5","/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/apis/auth.js":"6","/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/utils/auth.js":"7","/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/utils/localstorage.js":"8","/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/utils/utils.js":"9","/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/components/header/index.js":"10","/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/utils/viewer-extension.js":"11","/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/utils/my-awesome-extension.js":"12"},{"size":665,"mtime":1612529236352,"results":"13","hashOfConfig":"14"},{"size":404,"mtime":1612514866185,"results":"15","hashOfConfig":"14"},{"size":2050,"mtime":1614761993035,"results":"16","hashOfConfig":"14"},{"size":4372,"mtime":1615116023351,"results":"17","hashOfConfig":"14"},{"size":3065,"mtime":1612612716596,"results":"18","hashOfConfig":"14"},{"size":911,"mtime":1612515502996,"results":"19","hashOfConfig":"14"},{"size":214,"mtime":1612515559848,"results":"20","hashOfConfig":"14"},{"size":283,"mtime":1612515559850,"results":"21","hashOfConfig":"14"},{"size":604,"mtime":1612515559852,"results":"22","hashOfConfig":"14"},{"size":1206,"mtime":1612608578669,"results":"23","hashOfConfig":"14"},{"size":572,"mtime":1614761222866,"results":"24","hashOfConfig":"14"},{"size":669,"mtime":1615116023411,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1lf8oei",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/index.js",[],["54","55"],"/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/reportWebVitals.js",[],"/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/App.js",["56"],"import './App.css';\nimport Viewer from './components/viewer';\nimport Panel from './components/panel';\nimport React, { useEffect } from 'react';\nimport AuthAPI from './apis/auth';\n\nfunction App() {\n    const [currentUrn, setCurrentUrn] = React.useState(process.env.REACT_APP_URN);\n    const [currentWidth, setCurrentWidth] = React.useState(1);\n    const [currentHeight, setCurrentHeight] = React.useState(1);\n    const [currentDeep, setCurrentDeep] = React.useState(1);\n    useEffect(() => {\n        console.log('Create the App!');\n        AuthAPI.getAccessToken();\n    }, []);\n    const updateSize = (width, height, deep) => {\n        setCurrentWidth(width);\n        setCurrentHeight(height);\n        setCurrentDeep(deep);\n    };\n    return (\n        <div className=\"App\">\n            <div className=\"flex flex-row justify-start items-start p-2\">\n                <div className=\"panel p-2 w-1/4\">\n                    <p className=\"break-words text-left\">\n                        <b>Current URN:</b> {currentUrn}\n                    </p>\n                    <br></br>\n                    <p className=\"text-left\">\n                        <b>Current Size:</b>\n                    </p>\n                    <p className=\"text-left\">\n                        <b>Width:</b> {800 * currentWidth} mm\n                    </p>\n                    <p className=\"text-left\">\n                        <b>Height:</b> {2100 * currentHeight} mm\n                    </p>\n                    <p className=\"text-left\">\n                        <b>Deep:</b> {584 * currentDeep} mm\n                    </p>\n                    <Panel setSize={updateSize} />\n                </div>\n                <div className=\"p-2 w-3/4 h-90vh\">\n                    <Viewer\n                        currentUrn={currentUrn}\n                        currentWidth={currentWidth}\n                        currentHeight={currentHeight}\n                        currentDeep={currentDeep}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/components/viewer/index.jsx",["57","58"],"import React, { useEffect, useState } from 'react';\nimport './index.css';\nimport ForgeViewer from 'react-forge-viewer';\nimport LocalStroage from '../../utils/localstorage';\nimport * as THREE from 'three';\n\nfunction Viewer({ currentUrn, currentWidth, currentHeight, currentDeep }) {\n    const [view, setView] = useState(null);\n    const [model, setModel] = useState(null);\n    const [viewer, setViewer] = useState(null);\n    useEffect(() => {\n        if (model != null) {\n            const { extension } = require('../../utils/my-awesome-extension');\n            window.Autodesk.Viewing.theExtensionManager.registerExtension(\n                'MyAwesomeExtension',\n                extension\n            );\n            const modelData = model.getData();\n            modelData.instanceTree.enumNodeFragments(\n                3120,\n                fragId => {\n                    let fragProxy = viewer.impl.getFragmentProxy(model, fragId);\n                    console.log(fragProxy);\n                    fragProxy.scale = new THREE.Vector3(currentWidth, currentHeight, currentDeep);\n                    console.log(fragProxy.scale.length());\n                    fragProxy.updateAnimTransform();\n                },\n                false\n            );\n            // modelData.instanceTree.enumNodeFragments(\n            //     3,\n            //     fragId => {\n            //         let fragProxy = viewer.impl.getFragmentProxy(model, fragId);\n            //         fragProxy.scale = new THREE.Vector3(currentWidth, currentHeight, currentDeep);\n            //         fragProxy.updateAnimTransform();\n            //     },\n            //     false\n            // );\n            // modelData.instanceTree.enumNodeFragments(\n            //     4,\n            //     fragId => {\n            //         let fragProxy = viewer.impl.getFragmentProxy(model, fragId);\n            //         fragProxy.scale = new THREE.Vector3(currentWidth, currentHeight, currentDeep);\n            //         fragProxy.updateAnimTransform();\n            //     },\n            //     false\n            // );\n            viewer.impl.invalidate(true);\n            viewer.impl.sceneUpdated(true);\n        }\n    }, [currentWidth, currentHeight, currentDeep]);\n    const getForgeToken = () => {\n        return {\n            access_token: LocalStroage.get('access_token'),\n            token_type: 'Bearer',\n            expires_in: 3599,\n        };\n    };\n    const handleTokenRequested = onAccessToken => {\n        if (onAccessToken) {\n            let token = getForgeToken();\n            if (token) onAccessToken(token.access_token, token.expires_in);\n        }\n    };\n    const handleDocumentLoaded = (doc, viewables) => {\n        if (viewables.length === 0) {\n            console.error('Document contains no viewables.');\n        } else {\n            //Select the first viewable in the list to use in our viewer component\n            console.log('Loaded Document:', viewables);\n            setView(viewables[0]);\n        }\n    };\n    const handleModelLoaded = async (viewer, model) => {\n        console.log('Loaded model:', model);\n        setViewer(viewer);\n        setModel(model);\n    };\n    const addGeometry = () => {\n        var geom = new THREE.SphereGeometry(10, 8, 8);\n        var material = new THREE.MeshBasicMaterial({ color: 0xff0000 });\n        var sphereMesh = new THREE.Mesh(geom, material);\n        sphereMesh.position.set(1, 2, 3);\n        if (!viewer.overlays.hasScene('custom-scene')) {\n            viewer.overlays.addScene('custom-scene');\n        }\n        viewer.overlays.addMesh(sphereMesh, 'custom-scene');\n    };\n    return (\n        <div className=\"w-full h-full\">\n            <div className=\"w-full h-full relative\">\n                <ForgeViewer\n                    version=\"7.0\"\n                    urn={currentUrn}\n                    view={view}\n                    headless={false}\n                    // onViewerError={this.handleViewerError.bind(this)}\n                    onTokenRequest={handleTokenRequested}\n                    onDocumentLoad={handleDocumentLoaded}\n                    // onDocumentError={this.handleDocumentError.bind(this)}\n                    onModelLoad={handleModelLoaded}\n                    // onModelError={this.handleModelError.bind(this)}\n                ></ForgeViewer>\n            </div>\n        </div>\n    );\n}\n\nexport default Viewer;\n","/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/components/panel/index.jsx",[],"/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/apis/auth.js",[],"/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/utils/auth.js",[],"/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/utils/localstorage.js",[],"/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/utils/utils.js",[],"/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/components/header/index.js",[],"/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/utils/viewer-extension.js",[],"/Users/chonwaiun/Desktop/Self/Forge_Viewer_ThreeJS_React/src/utils/my-awesome-extension.js",[],["59","60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":8,"column":24,"nodeType":"67","messageId":"68","endLine":8,"endColumn":37},{"ruleId":"69","severity":1,"message":"70","line":51,"column":8,"nodeType":"71","endLine":51,"endColumn":50,"suggestions":"72"},{"ruleId":"65","severity":1,"message":"73","line":79,"column":11,"nodeType":"67","messageId":"68","endLine":79,"endColumn":22},{"ruleId":"61","replacedBy":"74"},{"ruleId":"63","replacedBy":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'setCurrentUrn' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'model' and 'viewer.impl'. Either include them or remove the dependency array.","ArrayExpression",["78"],"'addGeometry' is assigned a value but never used.",["76"],["77"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [currentWidth, currentHeight, currentDeep, model, viewer.impl]",{"range":"81","text":"82"},[2184,2226],"[currentWidth, currentHeight, currentDeep, model, viewer.impl]"]